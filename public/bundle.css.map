{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\n  <link href=\"https://fonts.googleapis.com/css?family=Quicksand\" rel=\"stylesheet\">\n  <script src=\"https://www.google.com/recaptcha/api.js\" async defer></script>\n</svelte:head>\n\n<script>\n    import { onMount, onDestroy } from 'svelte';\n    import { SHA3 } from 'sha3';\n\n\tlet playerid, password, repeat_password, email, input_totp;\n    let visible = false;\n\n    // let pass_upper = false, pass_lower = false, pass_number = false;\n    // let pass_special = false, pass_len = false;\n\n    var isEmailWithTLD = function (email){\n        return /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*(\\.\\w{2,})+$/.test(email);\n    };\n\n    //debug\n\tfunction click_login() {\n        // var rc_response = grecaptcha.getResponse();\n        // console.log(rc_response); // RECATCHA RESPONSE - REMOVE LINE BEFORE PRODUCTION\n\n        // check lengths - if they don't fit our sign up constraints, there's no point to consulting backend\n        if (!password || password.length < 1 || !playerid || playerid.length < 1){\n            document.getElementById(\"hiddentext\").innerHTML = \"did you fill out all the fields?\" ;\n            password = '';\n            return;\n        }\n        else if (password.length < 10 || password.length > 30){\n            document.getElementById(\"hiddentext\").innerHTML = \"incorrect password\" ;\n            password = '';\n            return;\n        }\n        else if (playerid.length < 6 || playerid.length > 20){\n            document.getElementById(\"hiddentext\").innerHTML = \"incorrect player ID\" ;\n            passhash = '';\n            return;\n        }\n        // else if (rc_response.length == 0) {\n        //     document.getElementById(\"hiddentext\").innerHTML = \"recaptcha failed\" ;\n        //     password = '';\n        //     return;\n        // }\n\n        // encrypt the password, clear out plaintext password\n        const hash = new SHA3(256);\n        hash.update(password);\n        password = '';\n        var passhash = hash.digest('hex');\n\n        console.log(playerid, passhash, input_totp)\n        var data = {playerid: playerid, password: passhash, totp: input_totp};//22DIFT2G4WICP76W\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('Success:', data);\n            console.log(data['success'])\n            // consult backend, allow or deny privileges\n            if (data['success']){\n                document.getElementById(\"hiddentext\").innerHTML = \"success\" ;\n            } else {\n                document.getElementById(\"hiddentext\").innerHTML = \"incorrect player ID or password\" ;\n            }\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n\t}\n\n  function check_playerid_constraints(pid) {\n    // length check\n    if (pid.length < 6 || pid.length > 20){\n        document.getElementById(\"hiddentext\").innerHTML = \"player ID should be between 6 and 20 characters\" ;\n        return false;\n    }\n\n    // profanity check\n    else if (pid.search(\"fuck\") != -1 || pid.search(\"shit\") != -1 || pid.search(\"whore\") != -1 || pid.search(\"bitch\") != -1 || pid.search(\"asshole\") != -1) {\n        document.getElementById(\"hiddentext\").innerHTML = \"is your player ID clean from swearing and profanity?\" ;\n        return false;\n    }\n\n    // consult database - \"that player ID is already in use! try another one!\"\n\n    return true;\n\n  }\n\n  function check_password_constraints(pwd, repeat_pwd) {\n    var flag = true;\n    //console.log(pwd, \" \", typeof(pwd))\n    if(pwd && pwd != pwd.toLocaleLowerCase() && pwd != pwd.toLocaleUpperCase()){ // check forat least one lower and one upper\n      document.getElementById(\"pw_upper_lower\").style.color = \"#28A53C\"; // green\n    } else {\n      document.getElementById(\"pw_upper_lower\").style.color = \"#DD6539\"; // red\n      flag = false;\n    }\n    if(pwd && /\\d/.test(pwd)){ // check for at least one number\n      document.getElementById(\"pw_numbers\").style.color = \"#28A53C\";\n    } else {\n      document.getElementById(\"pw_numbers\").style.color = \"#DD6539\";\n      flag = false;\n    }\n    if(pwd && /[\\s~`!@#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?()\\._]/g.test(pwd)){ // check for at least one symbol //OWASP Standard Symbol Set for passwords\n      document.getElementById(\"pw_symbols\").style.color = \"#28A53C\";\n    } else {\n      document.getElementById(\"pw_symbols\").style.color = \"#DD6539\";\n      flag = false;\n    }\n    if(pwd && pwd.length >= 10 && pwd.length <= 30){ // check for acceptable password length\n      document.getElementById(\"pw_len\").style.color = \"#28A53C\";\n    } else {\n      document.getElementById(\"pw_len\").style.color = \"#DD6539\";\n      flag = false;\n    }\n    if(pwd && pwd === repeat_pwd){ // check for repeat password match\n      document.getElementById(\"pw_repeat_match\").style.color = \"#28A53C\";\n    } else {\n      document.getElementById(\"pw_repeat_match\").style.color = \"#DD6539\";\n      flag = false;\n    }\n    return flag;\n  }\n\n    function click_signup() {\n        // send PII to server\n        var playerid_ok = check_playerid_constraints(playerid);\n        var password_ok = check_password_constraints(password, repeat_password);\n\n        // need to hash password before sending to server\n        const hash = new SHA3(256);\n        hash.update(password);\n        password = '';\n        var passhash = hash.digest('hex');\n\n        console.log(playerid, passhash)\n        var data = {\n            playerid: playerid,\n            password: passhash,\n            email: email\n        };\n        fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('Success Register:', data);\n            console.log(data['success'])\n            // consult backend, allow or deny privileges\n            if (data['success']){\n                document.getElementById(\"hiddentext\").innerHTML = \"Successful Registration\" ;\n            } else {\n                document.getElementById(\"hiddentext\").innerHTML = \"Unable to register account. Please try again\" ;\n            }\n        })\n        .catch((error) => {\n            console.error('Error Register:', error);\n        });\n    }\n\n  function toggle_visible() {\n    visible = !visible;\n  }\n\n  onMount(() => {\n    window.click_login = null;\n  })\n\n  onDestroy(() => {\n    window.click_login = null;\n  })\n\n</script>\n\n<main>\n\t<h1> chef<br>moji </h1>\n\t<p id=\"hiddentext\">  </p>\n\n  <p class=\"input_label\" style=\"left: 512px; top: 220px;\"> player id: </p>\n\t<label>\n      <input type=\"text\" name=\"username\" class=\"input_box\" style=\"top: 245px;\" bind:value={playerid}>\n  </label>\n\t<br>\n\n  <p class=\"input_label\" style=\"left: 500px; top: 280px;\"> password: </p>\n\t<label> <!-- ignore warnings in WebStorms, this input block works -->\n      <input type=\"password\" name=\"password\" class=\"input_box\" style=\"top: 305px;\" bind:value={password} on:input={visible?check_password_constraints(password, repeat_password):''} onCopy=\"return false;\" onCut=\"return false;\" onDrag=\"return false;\" autocomplete=off >\n  </label>\n\t<br>\n  {#if !visible}\n  <p class=\"input_label\" style=\"left: 500px; top: 340px;\"> totp (6 digits): </p>\n\t<label> <!-- ignore warnings in WebStorms, this input block works -->\n      <input type=\"input_totp\" name=\"input_totp\" class=\"input_box\" style=\"top: 365px;\" bind:value={input_totp} onCopy=\"return false;\" onCut=\"return false;\" onDrag=\"return false;\" autocomplete=off >\n  </label>\n\t<br>\n  {/if}\n\n  {#if visible}\n\n    <p class=\"input_label\" style=\"left: 405px; top: 340px;\" > repeat password: </p>\n    <label> <!-- ignore warnings in WebStorms, this input block works -->\n        <input type=\"password\" name=\"password\" class=\"input_box\" style=\"top: 365px;\" bind:value={repeat_password} on:input={visible?check_password_constraints(password, repeat_password):''} onCopy=\"return false;\" onCut=\"return false;\" onDrag=\"return false;\" autocomplete=off >\n    </label>\n    <br>\n\n    <p class=\"pw_constraints\" id=\"pw_upper_lower\" style=\"top: 407px; color: #DD6539;\"> contains upper and lowercase letters </p> <!-- red -->\n    <p class=\"pw_constraints\" id=\"pw_numbers\" style=\"top: 430px; color: #DD6539;\"> contains numbers </p>\n    <p class=\"pw_constraints\" id=\"pw_symbols\" style=\"top: 453px; color: #DD6539;\"> contains symbols </p>\n    <p class=\"pw_constraints\" id=\"pw_len\" style=\"top: 476px; color: #DD6539;\"> length is between is between 10 and 30 characters </p>\n    <p class=\"pw_constraints\" id=\"pw_repeat_match\" style=\"top: 499px; color: #DD6539;\"> passwords match </p>\n\n    <p class=\"input_label\" style=\"left: 514px; top: 541px;\"> email: </p>\n    <label>\n        <input type=\"email\" name=\"email\" class=\"input_box\" style=\"top: 566px;\"bind:value={email} onCopy=\"return false;\" onCut=\"return false;\" onDrag=\"return false;\" autocomplete=off >\n    </label>\n    <br>\n\n  {/if}\n\n\t<form action=\"?\" method=\"POST\">\n        <div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6Let39YUAAAAACzwA-hE3mbCstRaQdJC52E0l4iP\"></div>\n  </form>\n  <br>\n\n  {#if !visible}\n    <button class=\"landbtn\" style=\"left: 672px; top: 530px;\" on:click={toggle_visible}> sign up </button>\n  \t<button class=\"landbtn\" style=\"left: 1022px; top: 530px;\" on:click={click_login}> log in </button>\n  {:else}\n    <button class=\"landbtn\" style=\"left: 672px; top: 703px;\" on:click={toggle_visible}> go back </button>\n    <button class=\"landbtn\" style=\"left: 1022px; top: 703px;\" on:click={click_signup}> make my account </button>\n  {/if}\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n    position: absolute;\n\t\twidth: 210px;\n\t\theight: 250px;\n\t\tleft: 70px;\n\t\ttop: 225px;\n\n\t\tfont-family: Quicksand;\n\t\tfont-style: normal;\n\t\tfont-weight: bold;\n\t\tfont-size: 100px;\n\t\tline-height: 117px;\n\t\ttext-align: center;\n\n\t\tcolor: #7E9DC7;\n\t}\n\n\tp {\n\t\tcolor: #000000;\n\t\ttext-transform: lowercase;\n\t\tfont-family: 'Quicksand';\n\t}\n\n  #hiddentext {\n    position: absolute;\n    font-size: 30px;\n    text-align: left;\n    top: 150px;\n    left: 680px;\n  }\n\n\t.input_label {\n\t\t/* left and top attributes defined inline */\n    position: absolute;\n\t\twidth: 127px;\n\t\theight: 38px;\n\n\t\tfont-family: Quicksand;\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t\tfont-size: 30px;\n\t\tline-height: 35px;\n\t\ttext-align: right;\n    white-space: nowrap;\n\n\t\tcolor: #000000;\n\t}\n\n\t.input_box {\n\t\tfont-family: Quicksand;\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t\tposition: absolute;\n\t\twidth: 650px;\n\t\theight: 40px;\n\t\tleft: 672px;\n\n\t\tbackground: #FFFFFF;\n\t\tborder: 1px solid #000000;\n\t\tborder-radius: 15px;\n\t}\n\n  .pw_constraints {\n    position: absolute;\n    left: 672px;\n\n    font-size: 20px;\n  }\n\n\t#recaptcha {\n\t\tposition: absolute;\n\t\tleft: 850px;\n    top: 100px; /*430px*/\n\t}\n\n\t.landbtn {\n\t\t/* left and top attributes defined inline */\n\t\tposition: absolute;\n\t  width: 300px;\n\t\theight: 40px;\n\n\t\tbackground: #AEC2DC;\n\t\tborder-radius: 15px;\n\t\tcursor: pointer;\n\n    font-family: Quicksand;\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t\tfont-size: 20px;\n    color: black; /* font color */\n  }\n\n  .landbtn:hover {\n    background: #7E9DC7; /* Green */\n    color: white; /* font color */\n  }\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAuPC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACD,QAAQ,CAAE,QAAQ,CACpB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,KAAK,CAEV,WAAW,CAAE,SAAS,CACtB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,KAAK,CAClB,UAAU,CAAE,MAAM,CAElB,KAAK,CAAE,OAAO,AACf,CAAC,AAED,CAAC,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,WAAW,AACzB,CAAC,AAEA,WAAW,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,KAAK,AACb,CAAC,AAEF,YAAY,cAAC,CAAC,AAEX,QAAQ,CAAE,QAAQ,CACpB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAEZ,WAAW,CAAE,SAAS,CACtB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,KAAK,CACf,WAAW,CAAE,MAAM,CAErB,KAAK,CAAE,OAAO,AACf,CAAC,AAED,UAAU,cAAC,CAAC,AACX,WAAW,CAAE,SAAS,CACtB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,KAAK,CAEX,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,IAAI,AACpB,CAAC,AAEA,eAAe,cAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CAEX,SAAS,CAAE,IAAI,AACjB,CAAC,AAEF,UAAU,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACT,GAAG,CAAE,KAAK,AACb,CAAC,AAED,QAAQ,cAAC,CAAC,AAET,QAAQ,CAAE,QAAQ,CACjB,KAAK,CAAE,KAAK,CACb,MAAM,CAAE,IAAI,CAEZ,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CAEb,WAAW,CAAE,SAAS,CACxB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,AACd,CAAC,AAED,sBAAQ,MAAM,AAAC,CAAC,AACd,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,AACd,CAAC,AAEF,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC"
}